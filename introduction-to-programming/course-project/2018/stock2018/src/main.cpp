#include<stdio.h>
#include "stock.h"

int main () {
	/**
	 * 任务1示例
	 */
	int reco_num = LoadStockData("data/stock_data_sample_2016_01.cvs");
	// 正确返回值：53218

	/**
	 * 任务2示例
	 */
	double value;
	GetFieldVal(60, "Open", &value);
	// value正确结果：10.04

	/**
	 * 任务3示例
	 */
	int reco_index_1[] ={1736, 32748, 32752, 32753,
			32944, 32945, 49143, 49151, 50367, 50373};

	SortRecords (reco_index_1, 10, "Adj Close,Date");
	FILE *fp = fopen("out/sortRes.txt", "w");
	OutputToFile(reco_index_1, 10, fp);

	fclose(fp);

	// 文件的正确结果应该为：
	// 2016-01-18,2.22857,2.27143,2.2,2.24286,2.24286,90426967,600010.SS,0.00715,0.003198089
	// 2016-01-22,2.22143,2.25714,2.15714,2.24286,2.24286,113208581,600010.SS,0.05715,0.02614711
	// 2016-01-25,2.26429,2.27857,2.22857,2.24286,2.24286,89199212,600010.SS,0,0
	// 2016-01-12,2.34615,2.37692,2.21538,2.3,2.3,144192968,600022.SS,-0.07692,-0.032361207
	// 2016-01-13,2.28462,2.44615,2.27692,2.3,2.3,162391161,600022.SS,0,0
	// 2016-01-11,3.14,3.15,3.09,3.09,2.79398,286388562,601288.SS,-0.07,-0.022151899
	// 2016-01-21,3.08,3.13,3.08,3.09,2.79398,172707114,601288.SS,-0.02,-0.006430868
	// 2016-01-26,3.35,3.36,3.04,3.04,3.026783,83245861,000425.SZ,-0.34,-0.100591716
	// 2016-01-15,3.25,3.25,3.11,3.13,3.029835,117921284,601899.SS,-0.15,-0.045731707
	// 2016-01-25,3.13,3.15,3.09,3.13,3.029835,60622572,601899.SS,0.01,0.003205128

	/**
	 * 任务4示例
	 */
	int *reco_index_2; //动态数组空间
	int n;
	reco_index_2 =  Select("Open >= 50.15 AND Date == 2016-1-12", n);
	fp = fopen("out/selectRes.txt", "w");
	OutputToFile(reco_index_2, n, fp);
	free(reco_index_2);
	fclose(fp);

	// 文件的正确结果应该为：
	// 2016-01-12,83,88.050003,77.5,83.940002,83.940002,15473637,000025.SZ,-1.619996,-0.018934035
	// 2016-01-12,66.150002,66.150002,66.150002,66.150002,65.544334,0,000028.SZ,0,0
	// 2016-01-12,63.549999,64.25,63.009998,63.560001,62.387432,4441776,000538.SZ,0.159999,0.002523643
	// 2016-01-12,85.743599,89.0112,85.220703,87.660599,86.274185,2370956,000661.SZ,1.5859,0.018424694
	// 2016-01-12,52.880001,52.880001,52.880001,52.880001,52.880001,0,000901.SZ,0,0
	// 2016-01-12,68.879997,70.970001,66.010002,70.209999,70.067795,6554411,000938.SZ,1.540001,0.022426111
	// 2016-01-12,60.150002,60.150002,60.150002,60.150002,59.964142,0,002049.SZ,0,0
	// 2016-01-12,64.599998,68.970001,62.59,68.110001,68.009781,14128215,002095.SZ,4.91,0.077689872
	// 2016-01-12,59.689999,60.450001,58.68,60.049999,57.192352,1397450,002304.SZ,0.849998,0.014358074
	// 2016-01-12,58.75,60.18,57.950001,59.82,59.601223,15317436,002594.SZ,1.939999,0.033517605
	// 2016-01-12,58.5,60.490002,56.959999,59.23,59.084679,8742603,002657.SZ,1.23,0.021206897
	// 2016-01-12,52,54.48,50,52.630001,52.618561,5233713,002667.SZ,-0.879997,-0.016445469
	// 2016-01-12,55.009998,57,54.02,55.439999,55.439999,537115,002729.SZ,0.349999,0.006353222
	// 2016-01-12,95,96.989998,88.779999,94.639999,89.618446,1448186,002749.SZ,-0.199997,-0.002108783
	// 2016-01-12,81.660004,88.5,80.580002,88.5,88.440521,6628639,002751.SZ,8.050003,0.100062191
	// 2016-01-12,71.917297,75.250504,66.264198,66.264198,66.017319,9600435,002780.SZ,-7.359703,-0.099963502
	// 2016-01-12,67,69.980003,65,66.300003,64.517166,29322347,300033.SZ,1.280006,0.019686344
	// 2016-01-12,56.68,56.68,56.68,56.68,56.650002,0,300038.SZ,0,0
	// 2016-01-12,56.669998,56.669998,56.669998,56.669998,56.489086,0,300238.SZ,0,0
	// 2016-01-12,60.02,62.799999,60.02,61.709999,61.359928,837587,300436.SZ,1.709999,0.028499983
	// 2016-01-12,51.599998,51.599998,51.599998,51.599998,51.475513,0,300456.SZ,0,0
	// 2016-01-12,76.989998,79.25,71.599998,75.309998,75.261513,2614641,300467.SZ,-1.550003,-0.020166575
	// 2016-01-12,57.709999,60.060001,56.5,58.34,57.915997,1951046,300468.SZ,-0.16,-0.002735043
	// 2016-01-12,95,102,94.199997,97.580002,97.239319,1208543,300469.SZ,-0.790001,-0.008030914
	// 2016-01-12,69.5,71,66.809998,69.330002,67.815285,1783312,300473.SZ,0.520004,0.007557099
	// 2016-01-12,58.055,62,58,60.41,59.737679,5008940,300485.SZ,2.515,0.043440712
	// 2016-01-12,55.900002,55.900002,55.900002,55.900002,54.96801,1682300,300497.SZ,5.080002,0.099960685
	// 2016-01-12,201.100006,202.100006,196,196.789993,189.762802,4028723,600519.SS,-3.070008,-0.015360792
	// 2016-01-12,62.75,62.75,62.75,62.75,62.56459,0,600990.SS,0,0
	// 2016-01-12,57.25,59.68,57.25,57.900002,57.380379,3710319,601021.SS,1.310002,0.023149002
	// 2016-01-12,52.8461,54,51.538502,53.330799,52.25185,814909,603368.SS,0.5462,0.010347715
	// 2016-01-12,129.979996,130,124.110001,124.110001,123.910263,11928549,603508.SS,-13.789993,-0.099999954
	// 2016-01-12,52.200001,54,50.900002,53.16,52.50864,3060218,603883.SS,1.329998,0.025660775
	// 2016-01-12,57,58.990002,55.66,58.060001,57.737328,4647804,603988.SS,1.84,0.032728566

	/**
	 * 任务5示例
	 */
	int reco_index_3[] ={0, 1, 2, 3, 4, 5,
			6, 7, 8, 41, 42, 43, 44, 45, 46, 47};
	Aggregate (reco_index_3, 15, "AVG(Open)", "Code");
	// 文件的正确结果应该为：
	// 000001.SZ 9.32
	// 000004.SZ 35.40

}

